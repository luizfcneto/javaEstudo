
Variável
	> Área de memória associada a um nome, que pode armazenar valores de um determinado tipo. 

Declaração:
	- <tipo> <nome da variável>;
	- <tipo> <nome da variável> = <valor>;

Convenção de Nomenclatura:
	- a-z A-z _ & (primeira letra) o '&' e '_' não são usados com frequencia
	- a-z A-z _ & 0-9 (após a primeira letra) o '&' e '_' não são usados com frequencia
	- Case sensitive
	
	- Não pode ser nenhuma das palavras reservadas

Palavras já utilizadas (reservadas) pela linguagem java:
abstract					instanceof
assert						int
boolean						interface
break						long
byte						native
case						new
catch						package
char						private
class						protected
const						public
continue					return
default						short
do							static
double						strictfp
else						super
enum						switch
extends						synchronized
final						this
finally						throw	
float						throws
for							transient
goto						try
if							void	
implements					volatile	
import						while

Tipos Primitivos de variáveis
	-> inteiros	
		> byte		tamanho: 8 bits		2^8 
		> short		tamanho: 16 bits	2^16 
		> int		tamanho: 32 bits	2^32
		> long		tamanho: 64 bits 	2^64

	>> Convertendo bases de numeros inteiros:
		>>> Exemplo:
			int decimalVariavel = 26;
			int hexadecimalVariavel = 0x1a;
			int	octalVariavel = 032;
			int	binarioVariavel = 0b11010; // a partir do JDK 7

	
	-> numeros com ponto flutuante
		> float		tamanho: 32 bits
			>>Exemplo: float saldo = 100.30f;	//f=literal, necessário		
			
		> double	tamanho: 64 bits		*mais utilizado
			>>Exemplo: double saldo = 100.30;
		
	
		>>Colocando em notação cientifica:
			Exemplo:	
			double var1 = 1.34e2 // isso equivale a 1.34*10^2 = 134
	

	-> caracteres
		> char		tamanho: 8 bits
		Exemplos caracteres tabela ASCII:
			char o = 111;
			char i = 105;
			System.out.println("" + o + i );

		Sequencia de Escape:
		> \t		-> tab
		> \b		-> backspace
		> \n		-> nova linha
		> \r		-> retorno de carro
		> \f		-> avanço de pagina
		> \'		-> aspas simples
		> \"		-> aspas duplas
		> \\		-> barra invertida
		> \ddd	-> constante octal
		> \uxxx	-> constante hexadecimal
			
		Exemplos caracteres tabela unicode:
			char interrogacao = 0x00E1;
			System.out.println("" + o + i + interrogacao);		

	-> booleanos
		>boolean 	true ou false






